{"version":3,"sources":["contracts sync /^/.//.*/.address/.js$","contracts/YourCollectible.address.js","contracts/YourCollectible.abi.js","contracts/YourCollectible.bytecode.js","contracts/contracts.js","assets.js","hooks/OnBlock.js","hooks/Poller.js","hooks/Balance.js","hooks/ContractExistsAtAddress.js","hooks/ContractLoader.js","hooks/ContractReader.js","hooks/LookupAddress.js","constants.js","hooks/UserProvider.js","components/Address.jsx","components/Balance.jsx","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Wallet.jsx","components/Account.jsx","components/BytesStringInput.jsx","components/Contract/utils.js","components/Contract/DisplayVariable.jsx","components/Contract/FunctionForm.jsx","components/Contract/index.jsx","components/Faucet.jsx","components/GasGauge.jsx","components/Header.jsx","components/Ramp.jsx","components/Swap.jsx","components/ThemeSwitch.jsx","components/Timeline.jsx","App.jsx","hooks/ExchangePrice.js","hooks/GasPrice.js","hooks/ExternalContractLoader.js","hooks/EventListener.js","index.jsx","contracts sync /^/.//.*/.abi/.js$","contracts sync /^/.//.*/.bytecode/.js$"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","useOnBlock","provider","fn","args","savedCallback","useRef","useEffect","current","listener","blockNumber","length","on","off","usePoller","delay","extraWatch","setInterval","clearInterval","useBalance","address","pollTime","useState","balance","setBalance","pollBalance","useCallback","a","getBalance","newBalance","useContractExistsAtAddress","contractAddress","contractIsDeployed","setContractIsDeployed","checkDeployment","isAddress","getCode","bytecode","loadContract","contractName","signer","newContract","Contract","require","console","log","useContractLoader","providerOrSigner","contracts","setContracts","listAccounts","accounts","getSigner","contractList","newContracts","reduce","accumulator","loadContracts","useContractReader","functionName","formatter","onChange","adjustPollTime","value","setValue","setTimeout","bind","updateValue","newValue","lookupAddress","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","cache","window","localStorage","getItem","JSON","parse","timestamp","Date","now","name","then","setItem","stringify","INFURA_ID","DAI_ABI","inputs","internalType","type","payable","stateMutability","anonymous","indexed","constant","outputs","NETWORK","chainId","n","NETWORKS","localhost","color","blockExplorer","rpcUrl","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","mumbai","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","pathname","indexOf","rawPK","incomingPK","hash","replace","privateKey","history","pushState","currentPrivateKey","connection","url","Web3Provider","BurnerProvider","networkName","_network","Text","Typography","Address","props","ens","ensProvider","currentTheme","useThemeSwitcher","avatar","paragraph","rows","displayAddress","substr","size","text","etherscanLink","blockExplorerLink","minimized","style","verticalAlign","target","href","rel","seed","toLowerCase","scale","editable","copyable","fontSize","paddingLeft","Balance","dollarMode","setDollarMode","floatBalance","parseFloat","usingBalance","etherBalance","formatEther","toFixed","displayBalance","dollarMultiplier","padding","cursor","onClick","Transactor","etherscan","tx","getNetwork","network","options","dappId","system","networkId","transactionHandler","txInformation","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","emitter","transaction","onclick","open","notification","info","message","description","placement","error","Blockie","AddressInput","scan","setScan","currentValue","scannerButton","marginTop","count","CameraOutlined","QrcodeOutlined","updateAddress","possibleAddress","scanner","zIndex","position","left","top","width","resolution","onError","onScan","possibleNewValue","lastIndexOf","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","mode","setMode","display","setDisplay","option","title","usdValue","ethValue","Paragraph","Wallet","receiveButton","privateKeyButton","signerAddress","useUserAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","level","includeMargin","renderAs","imageSettings","excavate","key","KeyOutlined","wallet","ethers","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","pastpk","pastwallet","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","onOk","onCancel","footer","disabled","loading","parseEther","to","SendOutlined","Account","userProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","marginLeft","shape","utils","constants","tryToDisplay","thing","toNumber","formatUnits","DisplayVariable","contractFunction","functionInfo","refreshRequired","triggerRefresh","variable","setVariable","refresh","funcResponse","span","textAlign","opacity","FunctionForm","form","setForm","txValue","setTxValue","returnValue","setReturnValue","inputIndex","input","buttons","isHexString","formUpdate","parseBytes32String","formatBytes32String","toUtf8String","toUtf8Bytes","trim","margin","event","suffix","txValueInput","floatValue","BigNumber","from","toHexString","buttonIcon","defaultValue","bordered","height","innerIndex","baseType","returned","overrides","noContractDisplay","className","borderRadius","fontWeight","marginRight","role","aria-label","contract","customContract","account","show","displayedContractFunctions","values","interface","functions","filter","contractDisplay","isQueryable","connect","Faucet","blockie","setAddress","icon","GasGauge","parseInt","Header","subTitle","Ramp","modalUp","setModalUp","allFaucets","networks","DollarCircleOutlined","RampInstantSDK","hostAppName","hostLogoUrl","swapAmount","swapAsset","userAddress","Select","Option","Swap","ThemeSwitcher","theme","isDarkMode","setIsDarkMode","switcher","themes","status","right","bottom","checked","isChecked","dark","light","BufferList","ipfs","ipfsAPI","host","port","protocol","assets","targetNetwork","STARTING_JSON","external_url","image","attributes","trait_type","getFromIPFS","hashToGet","get","file","path","content","chunk","append","scaffoldEthProvider","StaticJsonRpcProvider","mainnetInfura","process","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","clearCachedProvider","ethereum","App","setInjectedProvider","setPrice","DAI","Token","Fetcher","fetchPairData","WETH","pair","route","Route","midPrice","toSignificant","getPrice","useExchangePrice","speed","setGasPrice","loadGasPrice","axios","response","newGasPrice","data","catch","useGasPrice","localChainId","selectedChainId","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","mainnetDAIContract","ABI","optionalBytecode","setContract","useExternalContractLoader","_lastBlockNumber","transferEvents","eventName","startBlock","updates","setUpdates","resetEventsBlock","messages","pop","removeListener","useEventListener","yourBalance","yourCollectibles","setYourCollectibles","collectibleUpdate","tokenIndex","YourCollectible","tokenOfOwnerByIndex","tokenId","tokenURI","ipfsHash","jsonManifestBuffer","jsonManifest","toString","uri","owner","updateYourCollectibles","networkDisplay","networkSelected","networkLocal","closable","setRoute","faucetHint","faucetAvailable","faucetClicked","setFaucetClicked","yourJSON","setYourJSON","sending","setSending","setIpfsHash","ipfsDownHash","setIpfsDownHash","setDownloading","ipfsContent","setIpfsContent","transferToAddresses","setTransferToAddresses","loadedAssets","setLoadedAssets","assetUpdate","forSale","uriToTokenId","ownerOf","galleryList","cardActions","mintItem","actions","LinkOutlined","maxWidth","src","alt","selectedKeys","Item","exact","paddingBottom","columnWidth","gutterWidth","gutterHeight","dataSource","renderItem","item","update","transferFrom","paddingTop","enableClipboard","onEdit","edit","updated_src","onAdd","add","onDelete","del","placeHolder","align","gutter","prevTheme","subgraphUri","client","ApolloClient","InMemoryCache","ReactDOM","render","themeMap","defaultTheme","document","getElementById"],"mappings":"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","file":"static/js/main.652eca54.chunk.js","sourcesContent":["var map = {\n\t\"./YourCollectible.address.js\": 1133\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1132;","module.exports = \"0x76F18b2ce2431daA75854D9782BA047b5d825D22\";","module.exports = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32[]\",\n        \"name\": \"assetsForSale\",\n        \"type\": \"bytes32[]\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"approved\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"baseURI\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"forSale\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getApproved\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"tokenURI\",\n        \"type\": \"string\"\n      }\n    ],\n    \"name\": \"mintItem\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ownerOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"_data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenOfOwnerByIndex\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"tokenURI\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"uriToTokenId\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];","module.exports = \"0x60806040523480156200001157600080fd5b506040516200221f3803806200221f833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82518660208202830111640100000000821117156200008c57600080fd5b82525081516020918201928201910280838360005b83811015620000bb578181015183820152602001620000a1565b505050509050016040525050506040518060400160405280600f81526020016e596f7572436f6c6c65637469626c6560881b815250604051806040016040528060038152602001622ca1a160e91b815250620001246301ffc9a760e01b6200024560201b60201c565b815162000139906006906020850190620002e3565b5080516200014f906007906020840190620002e3565b506200016b6380ac58cd60e01b6001600160e01b036200024516565b62000186635b5e139f60e01b6001600160e01b036200024516565b620001a163780e9d6360e01b6001600160e01b036200024516565b505060408051808201909152601581527f68747470733a2f2f697066732e696f2f697066732f00000000000000000000006020820152620001eb906001600160e01b03620002ca16565b60005b81518110156200023d576001600b60008484815181106200020b57fe5b6020908102919091018101518252810191909152604001600020805460ff1916911515919091179055600101620001ee565b505062000388565b6001600160e01b03198082161415620002a5576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b8051620002df906009906020840190620002e3565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200032657805160ff191683800117855562000356565b8280016001018555821562000356579182015b828111156200035657825182559160200191906001019062000339565b506200036492915062000368565b5090565b6200038591905b808211156200036457600081556001016200036f565b90565b611e8780620003986000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636c0360eb116100ad578063b7416f2a11610071578063b7416f2a146103bd578063b88d4fde146103da578063c7545849146104a0578063c87b56dd14610546578063e985e9c5146105635761012c565b80636c0360eb1461033c57806370a082311461034457806395d89b411461036a578063a22cb46514610372578063ae374b99146103a05761012c565b806323b872dd116100f457806323b872dd1461026a5780632f745c59146102a057806342842e0e146102cc5780634f6ccce7146103025780636352211e1461031f5761012c565b806301ffc9a71461013157806306fdde031461016c578063081812fc146101e9578063095ea7b31461022257806318160ddd14610250575b600080fd5b6101586004803603602081101561014757600080fd5b50356001600160e01b031916610591565b604080519115158252519081900360200190f35b6101746105b4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ae578181015183820152602001610196565b50505050905090810190601f1680156101db5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610206600480360360208110156101ff57600080fd5b503561064b565b604080516001600160a01b039092168252519081900360200190f35b61024e6004803603604081101561023857600080fd5b506001600160a01b0381351690602001356106ad565b005b610258610788565b60408051918252519081900360200190f35b61024e6004803603606081101561028057600080fd5b506001600160a01b03813581169160208101359091169060400135610799565b610258600480360360408110156102b657600080fd5b506001600160a01b0381351690602001356107f0565b61024e600480360360608110156102e257600080fd5b506001600160a01b03813581169160208101359091169060400135610821565b6102586004803603602081101561031857600080fd5b503561083c565b6102066004803603602081101561033557600080fd5b5035610858565b610174610886565b6102586004803603602081101561035a57600080fd5b50356001600160a01b03166108e7565b61017461094f565b61024e6004803603604081101561038857600080fd5b506001600160a01b03813516906020013515156109b0565b610158600480360360208110156103b657600080fd5b5035610ab5565b610258600480360360208110156103d357600080fd5b5035610aca565b61024e600480360360808110156103f057600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561042b57600080fd5b82018360208201111561043d57600080fd5b8035906020019184600183028401116401000000008311171561045f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610adc945050505050565b610258600480360360208110156104b657600080fd5b8101906020810181356401000000008111156104d157600080fd5b8201836020820111156104e357600080fd5b8035906020019184600183028401116401000000008311171561050557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b3a945050505050565b6101746004803603602081101561055c57600080fd5b5035610c59565b6101586004803603604081101561057957600080fd5b506001600160a01b0381358116916020013516610edc565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106405780601f1061061557610100808354040283529160200191610640565b820191906000526020600020905b81548152906001019060200180831161062357829003601f168201915b505050505090505b90565b600061065682610f0a565b6106915760405162461bcd60e51b815260040180806020018281038252602c815260200180611d50602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106b882610858565b9050806001600160a01b0316836001600160a01b0316141561070b5760405162461bcd60e51b8152600401808060200182810382526021815260200180611e006021913960400191505060405180910390fd5b806001600160a01b031661071d610f1d565b6001600160a01b0316148061073e575061073e81610739610f1d565b610edc565b6107795760405162461bcd60e51b8152600401808060200182810382526038815260200180611ca36038913960400191505060405180910390fd5b6107838383610f21565b505050565b60006107946002610f8f565b905090565b6107aa6107a4610f1d565b82610f9a565b6107e55760405162461bcd60e51b8152600401808060200182810382526031815260200180611e216031913960400191505060405180910390fd5b61078383838361103e565b6001600160a01b0382166000908152600160205260408120610818908363ffffffff61119c16565b90505b92915050565b61078383838360405180602001604052806000815250610adc565b60008061085060028463ffffffff6111a816565b509392505050565b600061081b82604051806060016040528060298152602001611d05602991396002919063ffffffff6111c416565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106405780601f1061061557610100808354040283529160200191610640565b60006001600160a01b03821661092e5760405162461bcd60e51b815260040180806020018281038252602a815260200180611cdb602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061081b90610f8f565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106405780601f1061061557610100808354040283529160200191610640565b6109b8610f1d565b6001600160a01b0316826001600160a01b03161415610a1e576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610a2b610f1d565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610a6f610f1d565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b600b6020526000908152604090205460ff1681565b600c6020526000908152604090205481565b610aed610ae7610f1d565b83610f9a565b610b285760405162461bcd60e51b8152600401808060200182810382526031815260200180611e216031913960400191505060405180910390fd5b610b34848484846111db565b50505050565b600080826040516020018082805190602001908083835b60208310610b705780518252601f199092019160209182019101610b51565b51815160209384036101000a60001901801990921691161790526040805192909401828103601f1901835284528151918101919091206000818152600b909252929020549194505060ff169150610bff9050576040805162461bcd60e51b815260206004820152600c60248201526b4e4f5420464f522053414c4560a01b604482015290519081900360640190fd5b6000818152600b60205260409020805460ff19169055610c1f600a61122d565b6000610c2b600a611236565b9050610c37338261123a565b610c418185611374565b6000918252600c602052604090912081905592915050565b6060610c6482610f0a565b610c9f5760405162461bcd60e51b815260040180806020018281038252602f815260200180611dd1602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610d345780601f10610d0957610100808354040283529160200191610d34565b820191906000526020600020905b815481529060010190602001808311610d1757829003601f168201915b505050505090506060610d45610886565b9050805160001415610d59575090506105af565b815115610e1a5780826040516020018083805190602001908083835b60208310610d945780518252601f199092019160209182019101610d75565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610ddc5780518252601f199092019160209182019101610dbd565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050506105af565b80610e24856113d7565b6040516020018083805190602001908083835b60208310610e565780518252601f199092019160209182019101610e37565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610e9e5780518252601f199092019160209182019101610e7f565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600061081b60028363ffffffff6114b216565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610f5682610858565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061081b82611236565b6000610fa582610f0a565b610fe05760405162461bcd60e51b815260040180806020018281038252602c815260200180611c77602c913960400191505060405180910390fd5b6000610feb83610858565b9050806001600160a01b0316846001600160a01b031614806110265750836001600160a01b031661101b8461064b565b6001600160a01b0316145b8061103657506110368185610edc565b949350505050565b826001600160a01b031661105182610858565b6001600160a01b0316146110965760405162461bcd60e51b8152600401808060200182810382526029815260200180611da86029913960400191505060405180910390fd5b6001600160a01b0382166110db5760405162461bcd60e51b8152600401808060200182810382526024815260200180611c536024913960400191505060405180910390fd5b6110e6838383610783565b6110f1600082610f21565b6001600160a01b0383166000908152600160205260409020611119908263ffffffff6114be16565b506001600160a01b0382166000908152600160205260409020611142908263ffffffff6114ca16565b506111556002828463ffffffff6114d616565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061081883836114ec565b60008080806111b78686611550565b9097909650945050505050565b60006111d18484846115cb565b90505b9392505050565b6111e684848461103e565b6111f284848484611695565b610b345760405162461bcd60e51b8152600401808060200182810382526032815260200180611c216032913960400191505060405180910390fd5b80546001019055565b5490565b6001600160a01b038216611295576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61129e81610f0a565b156112f0576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6112fc60008383610783565b6001600160a01b0382166000908152600160205260409020611324908263ffffffff6114ca16565b506113376002828463ffffffff6114d616565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b61137d82610f0a565b6113b85760405162461bcd60e51b815260040180806020018281038252602c815260200180611d7c602c913960400191505060405180910390fd5b6000828152600860209081526040909120825161078392840190611b66565b6060816113fc57506040805180820190915260018152600360fc1b60208201526105af565b8160005b811561141457600101600a82049150611400565b60608167ffffffffffffffff8111801561142d57600080fd5b506040519080825280601f01601f191660200182016040528015611458576020820181803683370190505b50859350905060001982015b83156114a957600a840660300160f81b8282806001900393508151811061148757fe5b60200101906001600160f81b031916908160001a905350600a84049350611464565b50949350505050565b60006108188383611815565b6000610818838361182d565b600061081883836118f3565b60006111d184846001600160a01b03851661193d565b8154600090821061152e5760405162461bcd60e51b8152600401808060200182810382526022815260200180611bff6022913960400191505060405180910390fd5b82600001828154811061153d57fe5b9060005260206000200154905092915050565b8154600090819083106115945760405162461bcd60e51b8152600401808060200182810382526022815260200180611d2e6022913960400191505060405180910390fd5b60008460000184815481106115a557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816116665760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561162b578181015183820152602001611613565b50505050905090810190601f1680156116585780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061167957fe5b9060005260206000209060020201600101549150509392505050565b60006116a9846001600160a01b03166119d4565b6116b557506001611036565b60606117db630a85bd0160e11b6116ca610f1d565b88878760405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561174357818101518382015260200161172b565b50505050905090810190601f1680156117705780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001611c21603291396001600160a01b038816919063ffffffff6119da16565b905060008180602001905160208110156117f457600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156118e9578354600019808301919081019060009087908390811061186057fe5b906000526020600020015490508087600001848154811061187d57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806118ad57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061081b565b600091505061081b565b60006118ff8383611815565b6119355750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561081b565b50600061081b565b6000828152600184016020526040812054806119a25750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556111d4565b828560000160018303815481106119b557fe5b90600052602060002090600202016001018190555060009150506111d4565b3b151590565b60606111d18484600085856119ee856119d4565b611a3f576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611a7e5780518252601f199092019160209182019101611a5f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611ae0576040519150601f19603f3d011682016040523d82523d6000602084013e611ae5565b606091505b5091509150611af5828286611b00565b979650505050505050565b60608315611b0f5750816111d4565b825115611b1f5782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561162b578181015183820152602001611613565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ba757805160ff1916838001178555611bd4565b82800160010185558215611bd4579182015b82811115611bd4578251825591602001919060010190611bb9565b50611be0929150611be4565b5090565b61064891905b80821115611be05760008155600101611bea56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122032bf8ca6d675361667cc6d67de2c879776ba9bdc20ebd7202386e04a2778b74764736f6c63430006070033\";","module.exports = [\"YourCollectible\"];","export default {\"Qme9T6kxqGE13fFLMN7o1gPXnojgktmDPENDphkHf5gMsn\":{\"name\":\"Buffalo\",\"description\":\"It's actually a bison?\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=buffalo\",\"image\":\"https://austingriffith.com/images/paintings/buffalo.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"green\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":42}]},\"QmToMnfPdtTDqjtJ2FjqPuPQtYQh7Ughq2ZCaJ8yj5B9qh\":{\"name\":\"Zebra\",\"description\":\"What is it so worried about?\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=zebra\",\"image\":\"https://austingriffith.com/images/paintings/zebra.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"blue\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":38}]},\"QmTEQGEPggM5CXKnhqSwEyig2C2r4NtbTk6BqBthfDqn11\":{\"name\":\"Rhino\",\"description\":\"What a horn!\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=rhino\",\"image\":\"https://austingriffith.com/images/paintings/rhino.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"pink\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":22}]},\"QmVJbUM3nftSWTvmwmqpNCswHsnqJ7oXwAm9erSHLLMwA9\":{\"name\":\"Fish\",\"description\":\"Is that an underbyte?\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=fish\",\"image\":\"https://austingriffith.com/images/paintings/fish.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"blue\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":15}]},\"QmZwLCzYR9aN4Urq9k7UtcEi7C4o22fhcFEyhGxxpPbe9C\":{\"name\":\"Flamingo\",\"description\":\"So delicate.\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=flamingo\",\"image\":\"https://austingriffith.com/images/paintings/flamingo.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"black\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":6}]},\"QmNssM24YWndkbXdNQbFGnbyoK5DyWrpoRXdAZ1joGv3xT\":{\"name\":\"Godzilla\",\"description\":\"Raaaar!\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=godzilla\",\"image\":\"https://austingriffith.com/images/paintings/godzilla.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"orange\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":99}]},\"QmRt3Se2vWwvhsEXdV8KKwpC5U2FuX5Zd4htBCTd7EpWrN\":{\"name\":\"Antelope\",\"description\":\"Speed goat.\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=antelope\",\"image\":\"https://austingriffith.com/images/paintings/antelope.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"purple\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":86}]},\"QmfBe45wDzgA4G33U5ggz3X5fMPXgVuYSKtLr7BTE7N1E7\":{\"name\":\"Bear\",\"description\":\"Snack time!\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=bear\",\"image\":\"https://austingriffith.com/images/paintings/bear.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"green\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":47}]},\"QmWSBgXskKJuMuUCz9KtvUFvV1jVc97UKSFUX9XJfBoijS\":{\"name\":\"Elephant\",\"description\":\"Junk in the trunk!\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=elephant\",\"image\":\"https://austingriffith.com/images/paintings/elephant.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"orange\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":38}]},\"QmVYpLtUbSnXLtT7eSFjaPnifjPUVr9QaQNNbLYaYtYwrT\":{\"name\":\"Hippo\",\"description\":\"Unsure.\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=hippo\",\"image\":\"https://austingriffith.com/images/paintings/hippo.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"green\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":39}]},\"QmeF1727dJwNKE66Y4baGtyk9dA6SdDXCc2SJCus2EVsAQ\":{\"name\":\"Lobster\",\"description\":\"Rock lobster!\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=lobster\",\"image\":\"https://austingriffith.com/images/paintings/lobster.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"grey\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":12}]},\"QmSQ31Cn4nS2FwEDPMMs2pM682wZLosEkDTyWgjhYRcdgS\":{\"name\":\"Mountain Goat\",\"description\":\"Goatse!\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=mountaingoat\",\"image\":\"https://austingriffith.com/images/paintings/mountaingoat.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"blue\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":70}]},\"QmTpuhVJKJWjaRbwUmhPhPj2i38y12MfgoQZ1yHtFJiq6p\":{\"name\":\"Octopus\",\"description\":\"Dope 'stach.\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=octopus\",\"image\":\"https://austingriffith.com/images/paintings/octopus.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"purple\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":41}]},\"QmUFExYWG6KkkgN7zvGoBWr97d1RRQeQGHG5Nx83mymCWS\":{\"name\":\"Ox\",\"description\":\"The ringer.\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=ox\",\"image\":\"https://austingriffith.com/images/paintings/ox.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"blue\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":59}]},\"QmebbAqgcvM58jBPVdEsTqZjoMn7Njz8cJwPArgjbr9ghf\":{\"name\":\"Penguin\",\"description\":\"It's cold out here.\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=penguin\",\"image\":\"https://austingriffith.com/images/paintings/penguin.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"orange\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":23}]},\"QmUjc4oorKhK3dRKQJQ7Rb3TQriLKA8rFJoURBf5N7NWk2\":{\"name\":\"Walrus\",\"description\":\"Seems nice.\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=walrus\",\"image\":\"https://austingriffith.com/images/paintings/walrus.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"orange\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":23}]},\"QmeMmdSgg5psqCfTxQmEtXkYKMqhTivxMNevFyfBbqY3Fp\":{\"name\":\"Killer Whale\",\"description\":\"Killers.\",\"external_url\":\"https://austingriffith.com/portfolio/paintings/?id=killerwhale\",\"image\":\"https://austingriffith.com/images/paintings/killerwhale.jpg\",\"attributes\":[{\"trait_type\":\"BackgroundColor\",\"value\":\"green\"},{\"trait_type\":\"Eyes\",\"value\":\"googly\"},{\"trait_type\":\"Stamina\",\"value\":87}]}}","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals\nconst DEBUG = false;\n\nexport default function useOnBlock(provider, fn, args) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n\n  // Turn on the listener if we have a function & a provider\n  useEffect(() => {\n    if (fn && provider) {\n      const listener = blockNumber => {\n        if (DEBUG) console.log(blockNumber, fn, args, provider.listeners());\n\n        if (args && args.length > 0) {\n          savedCallback.current(...args);\n        } else {\n          savedCallback.current();\n        }\n      };\n\n      provider.on(\"block\", listener);\n\n      return () => {\n        provider.off(\"block\", listener);\n      };\n    }\n  }, [provider]);\n}\n","import { useEffect, useRef } from \"react\";\n\n// helper hook to call a function regularly in time intervals\n\nexport default function usePoller(fn, delay, extraWatch) {\n  const savedCallback = useRef();\n  // Remember the latest fn.\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn]);\n  // Set up the interval.\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n  // run at start too\n  useEffect(() => {\n    fn();\n  }, [extraWatch]);\n}\n","import { useCallback, useState } from \"react\";\nimport useOnBlock from \"./OnBlock\";\nimport usePoller from \"./Poller\";\n\n/*\n  ~ What it does? ~\n\n  Gets your balance in ETH from given address and provider\n\n  ~ How can I use? ~\n\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get balance corresponding to given address\n  - Change provider to access balance on different chains (ex. mainnetProvider)\n  - If no pollTime is passed, the balance will update on every new block\n*/\n\nconst DEBUG = false;\n\nexport default function useBalance(provider, address, pollTime = 0) {\n  const [balance, setBalance] = useState();\n\n  const pollBalance = useCallback(\n    async (provider, address) => {\n      if (provider && address) {\n        const newBalance = await provider.getBalance(address);\n        if (newBalance !== balance) {\n          setBalance(newBalance);\n        }\n      }\n    },\n    [provider, address],\n  );\n\n  // Only pass a provider to watch on a block if there is no pollTime\n  useOnBlock(pollTime === 0 && provider, () => {\n    if (provider && address && pollTime === 0) {\n      pollBalance(provider, address);\n    }\n  });\n\n  // Use a poller if a pollTime is provided\n  usePoller(\n    async () => {\n      if (provider && address && pollTime > 0) {\n        if (DEBUG) console.log(\"polling!\", address);\n        pollBalance();\n      }\n    },\n    pollTime,\n    provider && address,\n  );\n\n  return balance;\n}\n","import { isAddress } from \"@ethersproject/address\";\nimport { useEffect, useState } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Checks whether a contract exists on the blockchain, returns true if it exists, otherwise false\n\n  ~ How can I use? ~\n\n  const contractIsDeployed = useContractExistsAtAddress(localProvider, contractAddress);\n\n  ~ Features ~\n\n  - Provide contractAddress to check if the contract is deployed\n  - Change provider to check contract address on different chains (ex. mainnetProvider)\n*/\n\nconst useContractExistsAtAddress = (provider, contractAddress) => {\n  const [contractIsDeployed, setContractIsDeployed] = useState(false);\n\n  // We can look at the blockchain and see what's stored at `contractAddress`\n  // If we find code then we know that a contract exists there.\n  // If we find nothing (0x0) then there is no contract deployed to that address\n  useEffect(() => {\n    // eslint-disable-next-line consistent-return\n    const checkDeployment = async () => {\n      if (!isAddress(contractAddress)) return false;\n      const bytecode = await provider.getCode(contractAddress);\n      setContractIsDeployed(bytecode !== \"0x0\");\n    };\n    if (provider) checkDeployment();\n  }, [provider, contractAddress]);\n\n  return contractIsDeployed;\n};\n\nexport default useContractExistsAtAddress;\n","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useEffect, useState } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Loads your local contracts and gives options to read values from contracts\n  or write transactions into them\n\n  ~ How can I use? ~\n\n  const readContracts = useContractLoader(localProvider) // or\n  const writeContracts = useContractLoader(userProvider)\n\n  ~ Features ~\n\n  - localProvider enables reading values from contracts\n  - userProvider enables writing transactions into contracts\n  - Example of keeping track of \"purpose\" variable by loading contracts into readContracts\n    and using ContractReader.js hook:\n    const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n  - Example of using setPurpose function from our contract and writing transactions by Transactor.js helper:\n    tx( writeContracts.YourContract.setPurpose(newPurpose) )\n*/\n\nconst loadContract = (contractName, signer) => {\n  const newContract = new Contract(\n    require(`../contracts/${contractName}.address.js`),\n    require(`../contracts/${contractName}.abi.js`),\n    signer,\n  );\n  try {\n    newContract.bytecode = require(`../contracts/${contractName}.bytecode.js`);\n  } catch (e) {\n    console.log(e);\n  }\n  return newContract;\n};\n\nexport default function useContractLoader(providerOrSigner) {\n  const [contracts, setContracts] = useState();\n  useEffect(() => {\n    async function loadContracts() {\n      if (typeof providerOrSigner !== \"undefined\") {\n        try {\n          // we need to check to see if this providerOrSigner has a signer or not\n          let signer;\n          let accounts;\n          if (providerOrSigner && typeof providerOrSigner.listAccounts === \"function\") {\n            accounts = await providerOrSigner.listAccounts();\n          }\n\n          if (accounts && accounts.length > 0) {\n            signer = providerOrSigner.getSigner();\n          } else {\n            signer = providerOrSigner;\n          }\n\n          const contractList = require(\"../contracts/contracts.js\");\n\n          const newContracts = contractList.reduce((accumulator, contractName) => {\n            accumulator[contractName] = loadContract(contractName, signer);\n            return accumulator;\n          }, {});\n          setContracts(newContracts);\n        } catch (e) {\n          console.log(\"ERROR LOADING CONTRACTS!!\", e);\n        }\n      }\n    }\n    loadContracts();\n  }, [providerOrSigner]);\n  return contracts;\n}\n","import { useEffect, useState } from \"react\";\nimport useOnBlock from \"./OnBlock\";\nimport usePoller from \"./Poller\";\n\nconst DEBUG = false;\n\n/*\n  ~ What it does? ~\n\n  Enables you to read values from contracts and keep track of them in the local React states\n\n  ~ How can I use? ~\n\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\n\n  ~ Features ~\n\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\n  - Specify the name of the contract, in this case it is \"YourContract\"\n  - Specify the name of the variable in the contract, in this case we keep track of \"purpose\" variable\n  - Pass an args array if the function requires\n  - Pass pollTime - if no pollTime is specified, the function will update on every new block\n*/\n\nexport default function useContractReader(contracts, contractName, functionName, args, pollTime, formatter, onChange) {\n  let adjustPollTime = 0;\n  if (pollTime) {\n    adjustPollTime = pollTime;\n  } else if (!pollTime && typeof args === \"number\") {\n    // it's okay to pass poll time as last argument without args for the call\n    adjustPollTime = args;\n  }\n\n  const [value, setValue] = useState();\n  useEffect(() => {\n    if (typeof onChange === \"function\") {\n      setTimeout(onChange.bind(this, value), 1);\n    }\n  }, [value, onChange]);\n\n  const updateValue = async () => {\n    try {\n      let newValue;\n      if (DEBUG) console.log(\"CALLING \", contractName, functionName, \"with args\", args);\n      if (args && args.length > 0) {\n        newValue = await contracts[contractName][functionName](...args);\n        if (DEBUG)\n          console.log(\"contractName\", contractName, \"functionName\", functionName, \"args\", args, \"RESULT:\", newValue);\n      } else {\n        newValue = await contracts[contractName][functionName]();\n      }\n      if (formatter && typeof formatter === \"function\") {\n        newValue = formatter(newValue);\n      }\n      // console.log(\"GOT VALUE\",newValue)\n      if (newValue !== value) {\n        setValue(newValue);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // Only pass a provider to watch on a block if we have a contract and no PollTime\n  useOnBlock(contracts && contracts[contractName] && adjustPollTime === 0 && contracts[contractName].provider, () => {\n    if (contracts && contracts[contractName] && adjustPollTime === 0) {\n      updateValue();\n    }\n  });\n\n  // Use a poller if a pollTime is provided\n  usePoller(\n    async () => {\n      if (contracts && contracts[contractName] && adjustPollTime > 0) {\n        if (DEBUG) console.log(\"polling!\", contractName, functionName);\n        updateValue();\n      }\n    },\n    adjustPollTime,\n    contracts && contracts[contractName],\n  );\n\n  return value;\n}\n","import { getAddress, isAddress } from \"@ethersproject/address\";\nimport { useEffect, useState } from \"react\";\n\n// resolved if(name){} to not save \"\" into cache\n\n/*\n  ~ What it does? ~\n\n  Gets ENS name from given address and provider\n\n  ~ How can I use? ~\n\n  const ensName = useLookupAddress(mainnetProvider, address);\n\n  ~ Features ~\n\n  - Provide address and get ENS name corresponding to given address\n*/\n\nconst lookupAddress = async (provider, address) => {\n  if (isAddress(address)) {\n    // console.log(`looking up ${address}`)\n    try {\n      // Accuracy of reverse resolution is not enforced.\n      // We then manually ensure that the reported ens name resolves to address\n      const reportedName = await provider.lookupAddress(address);\n\n      const resolvedAddress = await provider.resolveName(reportedName);\n\n      if (getAddress(address) === getAddress(resolvedAddress)) {\n        return reportedName;\n      }\n      return getAddress(address);\n    } catch (e) {\n      return getAddress(address);\n    }\n  }\n  return 0;\n};\n\nconst useLookupAddress = (provider, address) => {\n  const [ensName, setEnsName] = useState(address);\n  // const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address); Writing directly due to sync issues\n\n  useEffect(() => {\n    let cache = window.localStorage.getItem(\"ensCache_\" + address);\n    cache = cache && JSON.parse(cache);\n\n    if (cache && cache.timestamp > Date.now()) {\n      setEnsName(cache.name);\n    } else if (provider) {\n      lookupAddress(provider, address).then(name => {\n        if (name) {\n          setEnsName(name);\n          window.localStorage.setItem(\n            \"ensCache_\" + address,\n            JSON.stringify({\n              timestamp: Date.now() + 360000,\n              name,\n            }),\n          );\n        }\n      });\n    }\n  }, [provider, address, setEnsName]);\n\n  return ensName;\n};\n\nexport default useLookupAddress;\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\n\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\n\n// BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\n\n// EXTERNAL CONTRACTS\n\nexport const DAI_ADDRESS = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\";\n\nexport const DAI_ABI = [\n  {\n    inputs: [{ internalType: \"uint256\", name: \"chainId_\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"src\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"guy\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: true,\n    inputs: [\n      { indexed: true, internalType: \"bytes4\", name: \"sig\", type: \"bytes4\" },\n      { indexed: true, internalType: \"address\", name: \"usr\", type: \"address\" },\n      { indexed: true, internalType: \"bytes32\", name: \"arg1\", type: \"bytes32\" },\n      { indexed: true, internalType: \"bytes32\", name: \"arg2\", type: \"bytes32\" },\n      { indexed: false, internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"LogNote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"src\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"dst\", type: \"address\" },\n      { indexed: false, internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [{ internalType: \"bytes32\", name: \"\", type: \"bytes32\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"address\", name: \"\", type: \"address\" },\n    ],\n    name: \"allowance\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"burn\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ internalType: \"uint8\", name: \"\", type: \"uint8\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: \"address\", name: \"guy\", type: \"address\" }],\n    name: \"deny\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"mint\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"src\", type: \"address\" },\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"move\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"nonces\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"holder\", type: \"address\" },\n      { internalType: \"address\", name: \"spender\", type: \"address\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"expiry\", type: \"uint256\" },\n      { internalType: \"bool\", name: \"allowed\", type: \"bool\" },\n      { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n      { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n      { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n    ],\n    name: \"permit\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"pull\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"usr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"push\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: \"address\", name: \"guy\", type: \"address\" }],\n    name: \"rely\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"transfer\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: \"address\", name: \"src\", type: \"address\" },\n      { internalType: \"address\", name: \"dst\", type: \"address\" },\n      { internalType: \"uint256\", name: \"wad\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"version\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    name: \"wards\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nexport const NETWORK = chainId => {\n  for (const n in NETWORKS) {\n    if (NETWORKS[n].chainId === chainId) {\n      return NETWORKS[n];\n    }\n  }\n};\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: \"#666666\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: \"#ff8b9e\",\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: \"#7003DD\",\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: \"#e0d068\",\n    chainId: 4,\n    rpcUrl: `https://eth-rinkeby.alchemyapi.io/v2/4a9WfJUZRqtWwYB0BOWBDE4JkCj7z10z`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: \"#F60D09\",\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: \"#0975F6\",\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: \"#48a9a6\",\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  matic: {\n    name: \"matic\",\n    color: \"#2bbdf7\",\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: \"#92D9FA\",\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\n  },\n};\n","import { Web3Provider } from \"@ethersproject/providers\";\nimport BurnerProvider from \"burner-provider\";\nimport { useMemo } from \"react\";\nimport { INFURA_ID } from \"../constants\";\n\n/*\n  ~ What it does? ~\n\n  Gets user provider\n\n  ~ How can I use? ~\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n\n  ~ Features ~\n\n  - Specify the injected provider from Metamask\n  - Specify the local provider\n  - Usage examples:\n    const address = useUserAddress(userProvider);\n    const tx = Transactor(userProvider, gasPrice)\n*/\n\nconst useUserProvider = (injectedProvider, localProvider) =>\n  useMemo(() => {\n    if (injectedProvider) {\n      console.log(\"🦊 Using injected provider\");\n      return injectedProvider;\n    }\n    if (!localProvider) return undefined;\n\n    const burnerConfig = {};\n\n    if (window.location.pathname) {\n      if (window.location.pathname.indexOf(\"/pk\") >= 0) {\n        const incomingPK = window.location.hash.replace(\"#\", \"\");\n        let rawPK;\n        if (incomingPK.length === 64 || incomingPK.length === 66) {\n          console.log(\"🔑 Incoming Private Key...\");\n          rawPK = incomingPK;\n          burnerConfig.privateKey = rawPK;\n          window.history.pushState({}, \"\", \"/\");\n          const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n          if (currentPrivateKey && currentPrivateKey !== rawPK) {\n            window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n          }\n          window.localStorage.setItem(\"metaPrivateKey\", rawPK);\n        }\n      }\n    }\n\n    console.log(\"🔥 Using burner provider\", burnerConfig);\n    if (localProvider.connection && localProvider.connection.url) {\n      burnerConfig.rpcUrl = localProvider.connection.url;\n      return new Web3Provider(new BurnerProvider(burnerConfig));\n    }\n    // eslint-disable-next-line no-underscore-dangle\n    const networkName = localProvider._network && localProvider._network.name;\n    burnerConfig.rpcUrl = `https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`;\n    return new Web3Provider(new BurnerProvider(burnerConfig));\n  }, [injectedProvider, localProvider]);\n\nexport default useUserProvider;\n","import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { useLookupAddress } from \"../hooks\";\n\n// changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) =>\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const address = props.value || props.address;\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const { currentTheme } = useThemeSwitcher();\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  } else {\n    text = (\n      <Text copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {text}\n      </span>\n    </span>\n  );\n}\n","import { formatEther } from \"@ethersproject/units\";\nimport React, { useState } from \"react\";\nimport { useBalance } from \"../hooks\";\n\n/*\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n*/\n\nexport default function Balance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n\n  // const [listening, setListening] = useState(false);\n\n  const balance = useBalance(props.provider, props.address);\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n  if (typeof props.value !== \"undefined\") {\n    usingBalance = props.value;\n  }\n\n  if (usingBalance) {\n    const etherBalance = formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  const price = props.price || props.dollarMultiplier;\n\n  if (price && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: props.size ? props.size : 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {displayBalance}\n    </span>\n  );\n}\n","import { hexlify } from \"@ethersproject/bytes\";\nimport { parseUnits } from \"@ethersproject/units\";\nimport { notification } from \"antd\";\nimport Notify from \"bnc-notify\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\n\nexport default function Transactor(provider, gasPrice, etherscan) {\n  if (typeof provider !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async tx => {\n      const signer = provider.getSigner();\n      const network = await provider.getNetwork();\n      console.log(\"network\", network);\n      const options = {\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n        system: \"ethereum\",\n        networkId: network.chainId,\n        // darkMode: Boolean, // (default: false)\n        transactionHandler: txInformation => {\n          console.log(\"HANDLE TX\", txInformation);\n        },\n      };\n      const notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if (tx instanceof Promise) {\n          console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = hexlify(120000);\n          }\n          console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if ([1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n        }\n\n        return result;\n      } catch (e) {\n        console.log(e);\n        console.log(\"Transaction Error:\", e.message);\n        notification.error({\n          message: \"Transaction Error\",\n          description: e.message,\n        });\n      }\n    };\n  }\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\n\n// provides a blockie image for the address using \"react-blockies\" library\n\nexport default function Blockie(props) {\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\n    return <span />;\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\n}\n","import { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { Badge, Input } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks\";\nimport React, { useCallback, useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport Blockie from \"./Blockie\";\n\n// probably we need to change value={toAddress} to address={toAddress}\n\n/*\n  ~ What it does? ~\n\n  Displays an address input with QR scan option\n\n  ~ How can I use? ~\n\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress}\n                          or onChange={address => { setToAddress(address);}}\n*/\n\nexport default function AddressInput(props) {\n  const [value, setValue] = useState(props.value);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const scannerButton = (\n    <div\n      style={{ marginTop: 4, cursor: \"pointer\" }}\n      onClick={() => {\n        setScan(!scan);\n      }}\n    >\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n        <QrcodeOutlined style={{ fontSize: 18 }} />\n      </Badge>{\" \"}\n      Scan\n    </div>\n  );\n\n  const { ensProvider, onChange } = props;\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setValue(address);\n        if (typeof onChange === \"function\") {\n          onChange(address);\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  const scanner = scan ? (\n    <div\n      style={{\n        zIndex: 256,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n      }}\n      onClick={() => {\n        setScan(false);\n      }}\n    >\n      <QrReader\n        delay={250}\n        resolution={1200}\n        onError={e => {\n          console.log(\"SCAN ERROR\", e);\n          setScan(false);\n        }}\n        onScan={newValue => {\n          if (newValue) {\n            console.log(\"SCAN VALUE\", newValue);\n            let possibleNewValue = newValue;\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n              console.log(\"CLEANED VALUE\", possibleNewValue);\n            }\n            setScan(false);\n            updateAddress(possibleNewValue);\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return (\n    <div>\n      {scanner}\n      <Input\n        id=\"0xAddress\" // name it something other than address for auto fill doxxing\n        name=\"0xAddress\" // name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\n        value={ens || currentValue}\n        addonAfter={scannerButton}\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\n// small change in useEffect, display currentValue if it's provided by user\n\n/*\n  ~ What it does? ~\n\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\n\n  ~ How can I use? ~\n\n  <EtherInput\n    autofocus\n    price={price}\n    value=100\n    placeholder=\"Enter amount\"\n    onChange={value => {\n      setAmount(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide value={value} to specify initial amount of ether\n  - Provide placeholder=\"Enter amount\" value for the input\n  - Control input change by onChange={value => { setAmount(value);}}\n*/\n\nexport default function EtherInput(props) {\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState();\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    if (!props.price) return \"\";\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"USD\") {\n            setMode(\"ETH\");\n            setDisplay(currentValue);\n          } else {\n            setMode(\"USD\");\n            if (currentValue) {\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\n              setDisplay(usdValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let prefix;\n  let addonAfter;\n  if (mode === \"USD\") {\n    prefix = \"$\";\n    addonAfter = option(\"USD 🔀\");\n  } else {\n    prefix = \"Ξ\";\n    addonAfter = option(\"ETH 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\n      autoFocus={props.autoFocus}\n      prefix={prefix}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"USD\") {\n          const possibleNewValue = parseFloat(newValue);\n          if (possibleNewValue) {\n            const ethValue = possibleNewValue / props.price;\n            setValue(ethValue);\n            if (typeof props.onChange === \"function\") {\n              props.onChange(ethValue);\n            }\n            setDisplay(newValue);\n          } else {\n            setDisplay(newValue);\n          }\n        } else {\n          setValue(newValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\n\nconst { Text, Paragraph } = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const signerAddress = useUserAddress(props.provider);\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div>\n            <Text copyable>{pk}</Text>\n          </div>\n\n          <hr />\n\n          <i>\n            Point your camera phone at qr code to open in\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\n              burner wallet\n            </a>\n            :\n          </i>\n          <QR\n            value={\"https://xdai.io/\" + pk}\n            size=\"450\"\n            level=\"H\"\n            includeMargin\n            renderAs=\"svg\"\n            imageSettings={{ excavate: false }}\n          />\n\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\n            {\"https://xdai.io/\" + pk}\n          </Paragraph>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.provider);\n\n              let value;\n              try {\n                value = parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/*\n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n*/\n\nexport default function Account({\n  address,\n  userProvider,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n}) {\n  const modalButtons = [];\n  if (web3Modal) {\n    if (web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Button\n          key=\"logoutbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          onClick={logoutOfWeb3Modal}\n        >\n          logout\n        </Button>,\n      );\n    } else {\n      modalButtons.push(\n        <Button\n          key=\"loginbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          /* type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time */\n          onClick={loadWeb3Modal}\n        >\n          connect\n        </Button>,\n      );\n    }\n  }\n\n  const { currentTheme } = useThemeSwitcher();\n\n  const display = minimized ? (\n    \"\"\n  ) : (\n    <span>\n      {address ? (\n        <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} />\n      ) : (\n        \"Connecting...\"\n      )}\n      <Balance address={address} provider={localProvider} price={price} />\n      <Wallet\n        address={address}\n        provider={userProvider}\n        ensProvider={mainnetProvider}\n        price={price}\n        color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n      />\n    </span>\n  );\n\n  return (\n    <div>\n      {display}\n      {modalButtons}\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nconst { utils, constants } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value);}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState(constants.HashZero);\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"STRING\") {\n            setMode(\"BYTES32\");\n            if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number,\n                   it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue);\n              setDisplay(changedValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          } else {\n            setMode(\"STRING\");\n            if (currentValue && utils.isHexString(currentValue)) {\n              setDisplay(utils.parseBytes32String(currentValue));\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let addonAfter;\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\");\n  } else {\n    addonAfter = option(\"BYTES32 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"STRING\") {\n          // const ethValue = parseFloat(newValue) / props.price;\n          // setValue(ethValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue));\n          }\n          setValue(utils.formatBytes32String(newValue));\n          setDisplay(newValue);\n        } else {\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setValue(newValue);\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import { formatUnits } from \"@ethersproject/units\";\nimport React from \"react\";\nimport { Address } from \"..\";\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + formatUnits(thing, \"ether\");\n    }\n  }\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\n    return <Address address={thing} fontSize={22} />;\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","/* eslint-disable jsx-a11y/accessible-emoji */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { Col, Divider, Row } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport tryToDisplay from \"./utils\";\n\nconst DisplayVariable = ({ contractFunction, functionInfo, refreshRequired, triggerRefresh }) => {\n  const [variable, setVariable] = useState(\"\");\n\n  const refresh = useCallback(async () => {\n    try {\n      const funcResponse = await contractFunction();\n      setVariable(funcResponse);\n      triggerRefresh(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setVariable, contractFunction, triggerRefresh]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh, refreshRequired, contractFunction]);\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={14}>\n          <h2>{tryToDisplay(variable)}</h2>\n        </Col>\n        <Col span={2}>\n          <h2>\n            <a href=\"#\" onClick={refresh}>\n              🔄\n            </a>\n          </h2>\n        </Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n};\n\nexport default DisplayVariable;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/accessible-emoji */\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Button, Col, Divider, Input, Row, Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\n\nconst { utils } = require(\"ethers\");\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  let inputIndex = 0;\n  const inputs = functionInfo.inputs.map(input => {\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++;\n\n    let buttons = \"\";\n    if (input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to bytes32\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form };\n              formUpdate[key] = utils.parseEther(form[key]);\n              setForm(formUpdate);\n            }}\n          >\n            ✴️\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"address\") {\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\n      if (possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        );\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={event => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    );\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      const floatValue = parseFloat(txValue);\n                      if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue).toHexString());\n                    }}\n                  >\n                    #️⃣\n                  </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon =\n    functionInfo.type === \"call\" ? (\n      <Button style={{ marginLeft: -32 }}>Read📡</Button>\n    ) : (\n      <Button style={{ marginLeft: -32 }}>Send💸</Button>\n    );\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              let innerIndex = 0;\n              const args = functionInfo.inputs.map(input => {\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++;\n                let value = form[key];\n                if (input.baseType === \"array\") {\n                  value = JSON.parse(value);\n                } else if (input.type === \"bool\") {\n                  if (value === \"true\" || value === \"1\" || value === \"0x1\" || value === \"0x01\" || value === \"0x0001\") {\n                    value = 1;\n                  } else {\n                    value = 0;\n                  }\n                }\n                return value;\n              });\n\n              let result;\n              if (functionInfo.stateMutability === \"view\" || functionInfo.stateMutability === \"pure\") {\n                const returned = await contractFunction(...args);\n                result = tryToDisplay(returned);\n              } else {\n                const overrides = {};\n                if (txValue) {\n                  overrides.value = txValue; // ethers.utils.parseEther()\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides));\n                result = tryToDisplay(returned);\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import { Card } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport { useContractExistsAtAddress, useContractLoader } from \"../../hooks\";\nimport Account from \"../Account\";\nimport DisplayVariable from \"./DisplayVariable\";\nimport FunctionForm from \"./FunctionForm\";\n\nconst noContractDisplay = (\n  <div>\n    Loading...{\" \"}\n    <div style={{ padding: 32 }}>\n      You need to run{\" \"}\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run chain\n      </span>{\" \"}\n      and{\" \"}\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run deploy\n      </span>{\" \"}\n      to see your contract here.\n    </div>\n    <div style={{ padding: 32 }}>\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">\n        ☢️\n      </span>\n      Warning: You might need to run\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run deploy\n      </span>{\" \"}\n      <i>again</i> after the frontend comes up!\n    </div>\n  </div>\n);\n\nconst isQueryable = fn => (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") && fn.inputs.length === 0;\n\nexport default function Contract({\n  customContract,\n  account,\n  gasPrice,\n  signer,\n  provider,\n  name,\n  show,\n  price,\n  blockExplorer,\n}) {\n  const contracts = useContractLoader(provider);\n  let contract;\n  if (!customContract) {\n    contract = contracts ? contracts[name] : \"\";\n  } else {\n    contract = customContract;\n  }\n\n  const address = contract ? contract.address : \"\";\n  const contractIsDeployed = useContractExistsAtAddress(provider, address);\n\n  const displayedContractFunctions = useMemo(\n    () =>\n      contract\n        ? Object.values(contract.interface.functions).filter(\n            fn => fn.type === \"function\" && !(show && show.indexOf(fn.name) < 0),\n          )\n        : [],\n    [contract, show],\n  );\n\n  const [refreshRequired, triggerRefresh] = useState(false);\n  const contractDisplay = displayedContractFunctions.map(fn => {\n    if (isQueryable(fn)) {\n      // If there are no inputs, just display return value\n      return (\n        <DisplayVariable\n          key={fn.name}\n          contractFunction={contract[fn.name]}\n          functionInfo={fn}\n          refreshRequired={refreshRequired}\n          triggerRefresh={triggerRefresh}\n        />\n      );\n    }\n    // If there are inputs, display a form to allow users to provide these\n    return (\n      <FunctionForm\n        key={\"FF\" + fn.name}\n        contractFunction={\n          fn.stateMutability === \"view\" || fn.stateMutability === \"pure\"\n            ? contract[fn.name]\n            : contract.connect(signer)[fn.name]\n        }\n        functionInfo={fn}\n        provider={provider}\n        gasPrice={gasPrice}\n        triggerRefresh={triggerRefresh}\n      />\n    );\n  });\n\n  return (\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\n      <Card\n        title={\n          <div>\n            {name}\n            <div style={{ float: \"right\" }}>\n              <Account\n                address={address}\n                localProvider={provider}\n                injectedProvider={provider}\n                mainnetProvider={provider}\n                price={price}\n                blockExplorer={blockExplorer}\n              />\n              {account}\n            </div>\n          </div>\n        }\n        size=\"large\"\n        style={{ marginTop: 25, width: \"100%\" }}\n        loading={contractDisplay && contractDisplay.length <= 0}\n      >\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\n      </Card>\n    </div>\n  );\n}\n","import { SendOutlined } from \"@ant-design/icons\";\nimport { parseEther } from \"@ethersproject/units\";\nimport { Button, Input, Tooltip } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks\";\nimport React, { useCallback, useState } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../helpers\";\nimport Wallet from \"./Wallet\";\n\n// improved a bit by converting address to ens if it exists\n// added option to directly input ens name\n// added placeholder option\n\n/*\n  ~ What it does? ~\n\n  Displays a local faucet to send ETH to given address, also wallet is provided\n\n  ~ How can I use? ~\n\n  <Faucet\n    price={price}\n    localProvider={localProvider}\n    ensProvider={mainnetProvider}\n    placeholder={\"Send local faucet\"}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\n  - Provide localProvider={localProvider} to be able to send ETH to given address\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n              works both in input field & wallet\n  - Provide placeholder=\"Send local faucet\" value for the input\n*/\n\nexport default function Faucet(props) {\n  const [address, setAddress] = useState();\n\n  let blockie;\n  if (address && typeof address.toLowerCase === \"function\") {\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\n  } else {\n    blockie = <div />;\n  }\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await props.ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setAddress(address);\n      }\n    },\n    [props.ensProvider, props.onChange],\n  );\n\n  const tx = Transactor(props.localProvider);\n\n  return (\n    <span>\n      <Input\n        size=\"large\"\n        placeholder={props.placeholder ? props.placeholder : \"local faucet\"}\n        prefix={blockie}\n        // value={address}\n        value={ens || address}\n        onChange={e => {\n          // setAddress(e.target.value);\n          updateAddress(e.target.value);\n        }}\n        suffix={\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\n            <Button\n              onClick={() => {\n                tx({\n                  to: address,\n                  value: parseEther(\"0.5\"),\n                });\n                setAddress(\"\");\n              }}\n              shape=\"circle\"\n              icon={<SendOutlined />}\n            />\n            <Wallet\n              color=\"#888888\"\n              provider={props.localProvider}\n              ensProvider={props.ensProvider}\n              price={props.price}\n            />\n          </Tooltip>\n        }\n      />\n    </span>\n  );\n}\n","import { Button } from \"antd\";\nimport React from \"react\";\n\n// added display of 0 instead of NaN if gas price is not provided\n\n/*\n  ~ What it does? ~\n\n  Displays gas gauge\n\n  ~ How can I use? ~\n\n  <GasGauge\n    gasPrice={gasPrice}\n  />\n\n  ~ Features ~\n\n  - Provide gasPrice={gasPrice} and get current gas gauge\n*/\n\nexport default function GasGauge(props) {\n  return (\n    <Button\n      onClick={() => {\n        window.open(\"https://ethgasstation.info/\");\n      }}\n      size=\"large\"\n      shape=\"round\"\n    >\n      <span style={{ marginRight: 8 }}>\n        <span role=\"img\" aria-label=\"fuelpump\">\n          ⛽️\n        </span>\n      </span>\n      {typeof props.gasPrice === \"undefined\" ? 0 : parseInt(props.gasPrice, 10) / 10 ** 9}g\n    </Button>\n  );\n}\n","import { PageHeader } from \"antd\";\nimport React from \"react\";\n\n// displays a page header\n\nexport default function Header() {\n  return (\n    <a href=\"https://github.com/austintgriffith/scaffold-eth\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <PageHeader\n        title=\"🏗 scaffold-eth\"\n        subTitle=\"👩‍🔬 Buyer pays to mint NFT example\"\n        style={{ cursor: \"pointer\" }}\n      />\n    </a>\n  );\n}\n","import { DollarCircleOutlined } from \"@ant-design/icons\";\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\nimport { Button, Divider, Modal } from \"antd\";\nimport React, { useState } from \"react\";\n\n// added display of 0 if price={price} is not provided\n\n/*\n  ~ What it does? ~\n\n  Displays current ETH price and gives options to buy ETH through Wyre/Ramp/Coinbase\n                            or get through Rinkeby/Ropsten/Kovan/Goerli\n\n  ~ How can I use? ~\n\n  <Ramp\n    price={price}\n    address={address}\n  />\n\n  ~ Features ~\n\n  - Ramp opens directly in the application, component uses RampInstantSDK\n  - Provide price={price} and current ETH price will be displayed\n  - Provide address={address} and your address will be pasted into Wyre/Ramp instantly\n*/\n\nexport default function Ramp(props) {\n  const [modalUp, setModalUp] = useState(\"down\");\n\n  const type = \"default\";\n\n  const allFaucets = [];\n  for (const n in props.networks) {\n    if (props.networks[n].chainId !== 31337 && props.networks[n].chainId !== 1) {\n      allFaucets.push(\n        <p key={props.networks[n].chainId}>\n          <Button\n            style={{ color: props.networks[n].color }}\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(props.networks[n].faucet);\n            }}\n          >\n            {props.networks[n].name}\n          </Button>\n        </p>,\n      );\n    }\n  }\n\n  return (\n    <div>\n      <Button\n        size=\"large\"\n        shape=\"round\"\n        onClick={() => {\n          setModalUp(\"up\");\n        }}\n      >\n        <DollarCircleOutlined style={{ color: \"#52c41a\" }} />{\" \"}\n        {typeof props.price === \"undefined\" ? 0 : props.price.toFixed(2)}\n      </Button>\n      <Modal\n        title=\"Buy ETH\"\n        visible={modalUp === \"up\"}\n        onCancel={() => {\n          setModalUp(\"down\");\n        }}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={() => {\n              setModalUp(\"down\");\n            }}\n          >\n            cancel\n          </Button>,\n        ]}\n      >\n        <p>\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(\"https://pay.sendwyre.com/purchase?destCurrency=ETH&sourceAmount=25&dest=\" + props.address);\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\">\n              <span role=\"img\" aria-label=\"flag-us\">\n                🇺🇸\n              </span>\n            </span>\n            Wyre\n          </Button>\n        </p>\n        <p>\n          {\" \"}\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              new RampInstantSDK({\n                hostAppName: \"scaffold-eth\",\n                hostLogoUrl: \"https://scaffoldeth.io/scaffold-eth.png\",\n                swapAmount: \"100000000000000000\", // 0.1 ETH in wei  ?\n                swapAsset: \"ETH\",\n                userAddress: props.address,\n              })\n                .on(\"*\", event => console.log(event))\n                .show();\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\">\n              <span role=\"img\" aria-label=\"flag-gb\">\n                🇬🇧\n              </span>\n            </span>\n            Ramp\n          </Button>\n        </p>\n\n        <p>\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(\"https://www.coinbase.com/buy-ethereum\");\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\" aria-label=\"bank\">\n              🏦\n            </span>\n            Coinbase\n          </Button>\n        </p>\n\n        <Divider />\n\n        <h2>Testnet ETH</h2>\n\n        {allFaucets}\n      </Modal>\n    </div>\n  );\n}\n","import { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\nimport {\n  Button,\n  Card,\n  Descriptions,\n  Divider,\n  Drawer,\n  InputNumber,\n  Modal,\n  notification,\n  Row,\n  Select,\n  Space,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst erc20Abi = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\n];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n    return result;\n  }\n  console.log(\"no call of that name!\");\n};\n\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array =>\n  array.reduce((obj, item) => {\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n    return obj;\n  }, {});\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\n  );\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n\n  const [tokenList, setTokenList] = useState([]);\n\n  const [tokens, setTokens] = useState();\n\n  const [invertPrice, setInvertPrice] = useState(false);\n\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n      try {\n        const tokenList = await fetch(_tokenListUri);\n        const tokenListJson = await tokenList.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI =\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n        const _tokens = tokenListToObject(_tokenList);\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getTokenList();\n  }, [tokenListURI]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      const baseTokens = tokenList\n        .filter(function (t) {\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n        })\n        .map(el => {\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n        });\n\n      const listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n\n      let bestTrade;\n\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(\n          listOfPairs.filter(item => item),\n          new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n          tokens[tokenOut],\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(\n          listOfPairs.filter(item => item),\n          tokens[tokenIn],\n          new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n\n        let allowance;\n\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n\n  const route = trades\n    ? trades.length > 0\n      ? trades[0].route.path.map(function (item) {\n          return item.symbol;\n        })\n      : []\n    : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    const approvalAmount =\n      exact === \"in\"\n        ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n    try {\n      let args;\n      const metadata = {};\n\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals));\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: (\n          <>\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\n            <Text copyable>{result.hash}</Text>\n          </>\n        ),\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  const insufficientBalance = balanceIn\n    ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken\n    ? false\n    : routerAllowance\n    ? parseFloat(formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const formattedBalanceIn = balanceIn\n    ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\n    : null;\n  const formattedBalanceOut = balanceOut\n    ? parseFloat(formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\n    : null;\n\n  const metaIn =\n    tokens && tokenList && tokenIn\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenIn].address;\n        })[0]\n      : null;\n  const metaOut =\n    tokens && tokenList && tokenOut\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenOut].address;\n        })[0]\n      : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice\n    ? invertPrice\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\n      : `${price} ${tokenOut} per ${tokenIn}`\n    : null;\n\n  const priceWidget = (\n    <Space>\n      <Text type=\"secondary\">{priceDescription}</Text>\n      <Button\n        type=\"text\"\n        onClick={() => {\n          setInvertPrice(!invertPrice);\n        }}\n      >\n        <RetweetOutlined />\n      </Button>\n    </Space>\n  );\n\n  const swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row>\n        <Space>\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\n          {amountIn}\n          {tokenIn}\n        </Space>\n      </Row>\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\n        <span>↓</span>\n      </Row>\n      <Row>\n        <Space>\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\n          {amountOut}\n          {tokenOut}\n        </Space>\n      </Row>\n      <Divider />\n      <Row>{priceWidget}</Row>\n      <Row>\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\n          ? exact === \"in\"\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\n                6,\n              )} ${tokenOut} or the transaction will revert.`\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\n                6,\n              )} ${tokenIn} or the transaction will revert.`\n          : null}\n      </Row>\n    </Modal>\n  );\n\n  return (\n    <Card\n      title={\n        <Space>\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\n          <Typography>Uniswapper</Typography>\n        </Space>\n      }\n      extra={\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setSettingsVisible(true);\n          }}\n        >\n          <SettingOutlined />\n        </Button>\n      }\n    >\n      <Space direction=\"vertical\">\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setAmountOut();\n                    setAmountIn(formatUnits(balanceIn, tokens[tokenIn].decimals));\n                    setAmountOutMin();\n                    setAmountInMax();\n                    setExact(\"in\");\n                  }}\n                >\n                  {formattedBalanceIn}\n                </Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              min={0}\n              size=\"large\"\n              value={amountIn}\n              onChange={e => {\n                setAmountOut();\n                setTrades();\n                setAmountIn(e);\n                setExact(\"in\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenIn}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              defaultValue={defaultToken}\n              onChange={value => {\n                console.log(value);\n                if (value === tokenOut) {\n                  console.log(\"switch!\", tokenIn);\n                  setTokenOut(tokenIn);\n                  setAmountOut(amountIn);\n                  setBalanceOut(balanceIn);\n                }\n                setTokenIn(value);\n                setTrades();\n                setAmountIn();\n                setExact(\"out\");\n                setBalanceIn();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Tooltip title={route.join(\"->\")}>\n            <span>↓</span>\n          </Tooltip>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\n                <Button type=\"text\">{formattedBalanceOut}</Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              size=\"large\"\n              min={0}\n              value={amountOut}\n              onChange={e => {\n                setAmountOut(e);\n                setAmountIn();\n                setTrades();\n                setExact(\"out\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenOut}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              onChange={value => {\n                console.log(value, tokenIn, tokenOut);\n                if (value === tokenIn) {\n                  console.log(\"switch!\", tokenOut);\n                  setTokenIn(tokenOut);\n                  setAmountIn(amountOut);\n                  setBalanceIn(balanceOut);\n                }\n                setTokenOut(value);\n                setExact(\"in\");\n                setAmountOut();\n                setTrades();\n                setBalanceOut();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          {priceDescription ? priceWidget : null}\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Space>\n            {inputIsToken ? (\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\n              </Button>\n            ) : null}\n            <Button\n              size=\"large\"\n              loading={swapping}\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\n              onClick={showSwapModal}\n            >\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\n            </Button>\n            {swapModal}\n          </Space>\n        </Row>\n      </Space>\n      <Drawer\n        visible={settingsVisible}\n        onClose={() => {\n          setSettingsVisible(false);\n        }}\n        width={500}\n      >\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n          <Descriptions.Item label=\"routerAllowance\">\n            <Space>\n              {routerAllowance ? formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\n            </Space>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n          <Descriptions.Item label=\"bestPrice\">\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"nextMidPrice\">\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"priceImpact\">\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"slippageTolerance\">\n            <InputNumber\n              defaultValue={defaultSlippage}\n              min={0}\n              max={100}\n              precision={2}\n              formatter={value => `${value}%`}\n              parser={value => value.replace(\"%\", \"\")}\n              onChange={value => {\n                console.log(value);\n\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n                setSlippageTolerance(slippagePercent);\n              }}\n            />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"timeLimitInSeconds\">\n            <InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={value => {\n                console.log(value);\n                setTimeLimit(value);\n              }}\n            />\n          </Descriptions.Item>\n        </Descriptions>\n      </Drawer>\n    </Card>\n  );\n}\n\nexport default Swap;\n","import { Switch } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!(!theme || theme === \"light\"));\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = isChecked => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  };\n\n  // Avoid theme change flicker\n  // if (status === \"loading\") {\n  //   return null;\n  // }\n\n  return (\n    <div className=\"main fade-in\" style={{ position: \"fixed\", right: 8, bottom: 8 }}>\n      <span style={{ padding: 8 }}>{currentTheme === \"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n","import { DownloadOutlined, EditOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { Timeline, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import { LinkOutlined } from \"@ant-design/icons\";\nimport { StaticJsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { utils } from \"ethers\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport StackGrid from \"react-stack-grid\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport assets from \"./assets.js\";\nimport { Account, Address, AddressInput, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { DAI_ABI, DAI_ADDRESS, INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useEventListener,\n  useExchangePrice,\n  useExternalContractLoader,\n  useGasPrice,\n  useOnBlock,\n  useUserProvider,\n} from \"./hooks\";\n\nconst { BufferList } = require(\"bl\");\n// https://www.npmjs.com/package/ipfs-http-client\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\n\nconsole.log(\"📦 Assets: \", assets);\n\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// 📡 What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.rinkeby; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true;\n\n// EXAMPLE STARTING JSON:\nconst STARTING_JSON = {\n  description: \"It's actually a bison?\",\n  external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  name: \"Buffalo\",\n  attributes: [\n    {\n      trait_type: \"BackgroundColor\",\n      value: \"green\",\n    },\n    {\n      trait_type: \"Eyes\",\n      value: \"googly\",\n    },\n  ],\n};\n\n// helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path);\n    if (!file.content) continue;\n    const content = new BufferList();\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n    console.log(content);\n    return content;\n  }\n};\n\n// 🛰 providers\nif (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = new StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\");\nconst mainnetInfura = new StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID);\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_I\n\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nfunction App(props) {\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userProvider && userProvider._network && userProvider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader({ DAI: mainnetDAIContract }, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  console.log(\"🤗 balance:\", balance);\n\n  // 📟 Listen for broadcast events\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  console.log(\"📟 Transfer events:\", transferEvents);\n\n  //\n  // 🧠 This effect will update yourCollectibles by polling when your balance changes\n  //\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      const collectibleUpdate = [];\n      for (let tokenIndex = 0; tokenIndex < balance; tokenIndex++) {\n        try {\n          console.log(\"GEtting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex);\n          console.log(\"tokenId\", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          console.log(\"tokenURI\", tokenURI);\n\n          const ipfsHash = tokenURI.replace(\"https://ipfs.io/ipfs/\", \"\");\n          console.log(\"ipfsHash\", ipfsHash);\n\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString());\n            console.log(\"jsonManifest\", jsonManifest);\n            collectibleUpdate.push({ id: tokenId, uri: tokenURI, owner: address, ...jsonManifest });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      setYourCollectibles(collectibleUpdate);\n    };\n    updateYourCollectibles();\n  }, [address, yourBalance]);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // 🧫 DEBUG 👨🏻‍🔬\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetDAIContract\n    ) {\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\");\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetDAIContract);\n      console.log(\"🔐 writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetDAIContract,\n  ]);\n\n  let networkDisplay = \"\";\n  if (localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <b>{networkLocal && networkLocal.name}</b>.\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name === \"localhost\";\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    );\n  }\n\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\n  const [sending, setSending] = useState();\n  const [ipfsHash, setIpfsHash] = useState();\n  const [ipfsDownHash, setIpfsDownHash] = useState();\n\n  const [downloading, setDownloading] = useState();\n  const [ipfsContent, setIpfsContent] = useState();\n\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n\n  const [loadedAssets, setLoadedAssets] = useState();\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      const assetUpdate = [];\n      for (const a in assets) {\n        try {\n          const forSale = await readContracts.YourCollectible.forSale(utils.id(a));\n          let owner;\n          if (!forSale) {\n            const tokenId = await readContracts.YourCollectible.uriToTokenId(utils.id(a));\n            owner = await readContracts.YourCollectible.ownerOf(tokenId);\n          }\n          assetUpdate.push({ id: a, ...assets[a], forSale, owner });\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      setLoadedAssets(assetUpdate);\n    };\n    if (readContracts && readContracts.YourCollectible) updateYourCollectibles();\n  }, [assets, readContracts, transferEvents]);\n\n  const galleryList = [];\n  for (const a in loadedAssets) {\n    console.log(\"loadedAssets\", a, loadedAssets[a]);\n\n    const cardActions = [];\n    if (loadedAssets[a].forSale) {\n      cardActions.push(\n        <div>\n          <Button\n            onClick={() => {\n              console.log(\"gasPrice,\", gasPrice);\n              tx(writeContracts.YourCollectible.mintItem(loadedAssets[a].id, { gasPrice }));\n            }}\n          >\n            Mint\n          </Button>\n        </div>,\n      );\n    } else {\n      cardActions.push(\n        <div>\n          owned by:{\" \"}\n          <Address\n            address={loadedAssets[a].owner}\n            ensProvider={mainnetProvider}\n            blockExplorer={blockExplorer}\n            minimized\n          />\n        </div>,\n      );\n    }\n\n    galleryList.push(\n      <Card\n        style={{ width: 200 }}\n        key={loadedAssets[a].name}\n        actions={cardActions}\n        title={\n          <div>\n            {loadedAssets[a].name}{\" \"}\n            <a\n              style={{ cursor: \"pointer\", opacity: 0.33 }}\n              href={loadedAssets[a].external_url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <LinkOutlined />\n            </a>\n          </div>\n        }\n      >\n        <img style={{ maxWidth: 130 }} src={loadedAssets[a].image} alt=\"\" />\n        <div style={{ opacity: 0.77 }}>{loadedAssets[a].description}</div>\n      </Card>,\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              Gallery\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/yourcollectibles\">\n            <Link\n              onClick={() => {\n                setRoute(\"/yourcollectibles\");\n              }}\n              to=\"/yourcollectibles\"\n            >\n              YourCollectibles\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/transfers\">\n            <Link\n              onClick={() => {\n                setRoute(\"/transfers\");\n              }}\n              to=\"/transfers\"\n            >\n              Transfers\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsup\">\n            <Link\n              onClick={() => {\n                setRoute(\"/ipfsup\");\n              }}\n              to=\"/ipfsup\"\n            >\n              IPFS Upload\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsdown\">\n            <Link\n              onClick={() => {\n                setRoute(\"/ipfsdown\");\n              }}\n              to=\"/ipfsdown\"\n            >\n              IPFS Download\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/debugcontracts\">\n            <Link\n              onClick={() => {\n                setRoute(\"/debugcontracts\");\n              }}\n              to=\"/debugcontracts\"\n            >\n              Debug Contracts\n            </Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                🎛 this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <div style={{ maxWidth: 820, margin: \"auto\", marginTop: 32, paddingBottom: 256 }}>\n              <StackGrid columnWidth={200} gutterWidth={16} gutterHeight={16}>\n                {galleryList}\n              </StackGrid>\n            </div>\n          </Route>\n\n          <Route path=\"/yourcollectibles\">\n            <div style={{ width: 640, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n              <List\n                bordered\n                dataSource={yourCollectibles}\n                renderItem={item => {\n                  const id = item.id.toNumber();\n                  return (\n                    <List.Item key={id + \"_\" + item.uri + \"_\" + item.owner}>\n                      <Card\n                        title={\n                          <div>\n                            <span style={{ fontSize: 16, marginRight: 8 }}>#{id}</span> {item.name}\n                          </div>\n                        }\n                      >\n                        <div>\n                          <img src={item.image} style={{ maxWidth: 150 }} alt=\"\" />\n                        </div>\n                        <div>{item.description}</div>\n                      </Card>\n\n                      <div>\n                        owner:{\" \"}\n                        <Address\n                          address={item.owner}\n                          ensProvider={mainnetProvider}\n                          blockExplorer={blockExplorer}\n                          fontSize={16}\n                        />\n                        <AddressInput\n                          ensProvider={mainnetProvider}\n                          placeholder=\"transfer to address\"\n                          value={transferToAddresses[id]}\n                          onChange={newValue => {\n                            const update = {};\n                            update[id] = newValue;\n                            setTransferToAddresses({ ...transferToAddresses, ...update });\n                          }}\n                        />\n                        <Button\n                          onClick={() => {\n                            console.log(\"writeContracts\", writeContracts);\n                            tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\n                          }}\n                        >\n                          Transfer\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/transfers\">\n            <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n              <List\n                bordered\n                dataSource={transferEvents}\n                renderItem={item => {\n                  return (\n                    <List.Item key={item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item[2].toNumber()}>\n                      <span style={{ fontSize: 16, marginRight: 8 }}>#{item[2].toNumber()}</span>\n                      <Address address={item[0]} ensProvider={mainnetProvider} fontSize={16} /> =&gt;\n                      <Address address={item[1]} ensProvider={mainnetProvider} fontSize={16} />\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/ipfsup\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\", textAlign: \"left\" }}>\n              <ReactJson\n                style={{ padding: 8 }}\n                src={yourJSON}\n                theme=\"pop\"\n                enableClipboard={false}\n                onEdit={(edit, a) => {\n                  setYourJSON(edit.updated_src);\n                }}\n                onAdd={(add, a) => {\n                  setYourJSON(add.updated_src);\n                }}\n                onDelete={(del, a) => {\n                  setYourJSON(del.updated_src);\n                }}\n              />\n            </div>\n\n            <Button\n              style={{ margin: 8 }}\n              loading={sending}\n              size=\"large\"\n              shape=\"round\"\n              type=\"primary\"\n              onClick={async () => {\n                console.log(\"UPLOADING...\", yourJSON);\n                setSending(true);\n                setIpfsHash();\n                const result = await ipfs.add(JSON.stringify(yourJSON)); // addToIPFS(JSON.stringify(yourJSON))\n                if (result && result.path) {\n                  setIpfsHash(result.path);\n                }\n                setSending(false);\n                console.log(\"RESULT:\", result);\n              }}\n            >\n              Upload to IPFS\n            </Button>\n\n            <div style={{ padding: 16, paddingBottom: 150 }}>{ipfsHash}</div>\n          </Route>\n          <Route path=\"/ipfsdown\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\" }}>\n              <Input\n                value={ipfsDownHash}\n                placeHolder=\"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\"\n                onChange={e => {\n                  setIpfsDownHash(e.target.value);\n                }}\n              />\n            </div>\n            <Button\n              style={{ margin: 8 }}\n              loading={sending}\n              size=\"large\"\n              shape=\"round\"\n              type=\"primary\"\n              onClick={async () => {\n                console.log(\"DOWNLOADING...\", ipfsDownHash);\n                setDownloading(true);\n                setIpfsContent();\n                const result = await getFromIPFS(ipfsDownHash); // addToIPFS(JSON.stringify(yourJSON))\n                if (result && result.toString) {\n                  setIpfsContent(result.toString());\n                }\n                setDownloading(false);\n              }}\n            >\n              Download from IPFS\n            </Button>\n\n            <pre style={{ padding: 16, width: 500, margin: \"auto\", paddingBottom: 150 }}>{ipfsContent}</pre>\n          </Route>\n          <Route path=\"/debugcontracts\">\n            <Contract\n              name=\"YourCollectible\"\n              signer={userProvider.getSigner()}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userProvider={userProvider}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                💬\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\n/* eslint-disable */\nwindow.ethereum &&\n  window.ethereum.on(\"chainChanged\", chainId => {\n    web3Modal.cachedProvider &&\n      setTimeout(() => {\n        window.location.reload();\n      }, 1);\n  });\n\nwindow.ethereum &&\n  window.ethereum.on(\"accountsChanged\", accounts => {\n    web3Modal.cachedProvider &&\n      setTimeout(() => {\n        window.location.reload();\n      }, 1);\n  });\n/* eslint-enable */\n\nexport default App;\n","import { Fetcher, Route, Token, WETH } from \"@uniswap/sdk\";\nimport { usePoller } from \"eth-hooks\";\nimport { useState } from \"react\";\n\nexport default function useExchangePrice(targetNetwork, mainnetProvider, pollTime) {\n  const [price, setPrice] = useState(0);\n\n  const pollPrice = () => {\n    async function getPrice() {\n      if (targetNetwork.price) {\n        setPrice(targetNetwork.price);\n      } else {\n        const DAI = new Token(\n          mainnetProvider.network ? mainnetProvider.network.chainId : 1,\n          \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n          18,\n        );\n        const pair = await Fetcher.fetchPairData(DAI, WETH[DAI.chainId], mainnetProvider);\n        const route = new Route([pair], WETH[DAI.chainId]);\n        setPrice(parseFloat(route.midPrice.toSignificant(6)));\n      }\n    }\n    getPrice();\n  };\n  usePoller(pollPrice, pollTime || 9777);\n\n  return price;\n}\n","import axios from \"axios\";\nimport { usePoller } from \"eth-hooks\";\nimport { useState } from \"react\";\n\nexport default function useGasPrice(targetNetwork, speed) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    if (targetNetwork.gasPrice) {\n      setGasPrice(targetNetwork.gasPrice);\n    } else {\n      axios\n        .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\n        .then(response => {\n          const newGasPrice = response.data[speed || \"fast\"] * 100000000;\n          if (newGasPrice !== gasPrice) {\n            setGasPrice(newGasPrice);\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n","/* eslint-disable import/no-dynamic-require */\n/* eslint-disable global-require */\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useEffect, useState } from \"react\";\n\n/*\n  when you want to load an existing contract using just the provider, address, and ABI\n*/\n\n/*\n  ~ What it does? ~\n\n  Enables you to load an existing mainnet DAI contract using the provider, address and abi\n\n  ~ How can I use? ~\n\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n\n  ~ Features ~\n\n  - Specify mainnetProvider\n  - Specify DAI_ADDRESS and DAI_ABI, you can load/write them using constants.js\n*/\nexport default function useExternalContractLoader(provider, address, ABI, optionalBytecode) {\n  const [contract, setContract] = useState();\n  useEffect(() => {\n    async function loadContract() {\n      if (typeof provider !== \"undefined\" && address && ABI) {\n        try {\n          // we need to check to see if this provider has a signer or not\n          let signer;\n          const accounts = await provider.listAccounts();\n          if (accounts && accounts.length > 0) {\n            signer = provider.getSigner();\n          } else {\n            signer = provider;\n          }\n\n          const customContract = new Contract(address, ABI, signer);\n          if (optionalBytecode) customContract.bytecode = optionalBytecode;\n\n          setContract(customContract);\n        } catch (e) {\n          console.log(\"ERROR LOADING EXTERNAL CONTRACT AT \" + address + \" (check provider, address, and ABI)!!\", e);\n        }\n      }\n    }\n    loadContract();\n  }, [provider, address, ABI, optionalBytecode]);\n  return contract;\n}\n","import { useEffect, useState } from \"react\";\n\n/*\n  ~ What it does? ~\n\n  Enables you to keep track of events\n\n  ~ How can I use? ~\n\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n\n  ~ Features ~\n\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\n  - Specify the name of the contract, in this case it is \"YourContract\"\n  - Specify the name of the event in the contract, in this case we keep track of \"SetPurpose\" event\n  - Specify the provider\n*/\n\nexport default function useEventListener(contracts, contractName, eventName, provider, startBlock, args) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffect(() => {\n    if (typeof provider !== \"undefined\" && typeof startBlock !== \"undefined\") {\n      // if you want to read _all_ events from your contracts, set this to the block number it is deployed\n      provider.resetEventsBlock(startBlock);\n    }\n    if (contracts && contractName && contracts[contractName]) {\n      try {\n        contracts[contractName].on(eventName, (...args) => {\n          const blockNumber = args[args.length - 1].blockNumber;\n          setUpdates(messages => [{ blockNumber, ...args.pop().args }, ...messages]);\n        });\n        return () => {\n          contracts[contractName].removeListener(eventName);\n        };\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [provider, startBlock, contracts, contractName, eventName]);\n\n  return updates;\n}\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","var map = {\n\t\"./YourCollectible.abi.js\": 1134\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 559;","var map = {\n\t\"./YourCollectible.bytecode.js\": 1135\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 560;"],"sourceRoot":""}