{"ast":null,"code":"var _jsxFileName = \"/Users/yuzucchi/Documents/operations/nft/scaffold-eth/packages/react-app/src/components/Address.jsx\";\nimport { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useLookupAddress } from \"../hooks\"; // changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst {\n  Text\n} = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const address = props.value || props.address;\n  const ens = useLookupAddress(props.ensProvider, address); // const { currentTheme } = useThemeSwitcher();\n\n  if (!address) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Skeleton, {\n      avatar: true,\n      paragraph: {\n        rows: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n\n  if (props.minimized) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      className: \"align-middle  self-center\",\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Blockies, {\n      className: \"align-middle  self-center\",\n      seed: address.toLowerCase(),\n      size: 8,\n      scale: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  let text;\n\n  if (props.onChange) {\n    text = /*#__PURE__*/React.createElement(\"a\", {\n      className: \" text-secondary  text-base text-center \",\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, displayAddress);\n  } else {\n    text =\n    /*#__PURE__*/\n    // copyable={{ text: address }}\n    React.createElement(\"a\", {\n      className: \" text-secondary  text-base text-center \",\n      target: \"_blank\",\n      href: etherscanLink,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, displayAddress);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Blockies, {\n    seed: address.toLowerCase(),\n    size: 8,\n    scale: props.fontSize ? props.fontSize / 7 : 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      verticalAlign: \"middle\",\n      paddingLeft: 5,\n      fontSize: props.fontSize ? props.fontSize : 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, text));\n}","map":{"version":3,"sources":["/Users/yuzucchi/Documents/operations/nft/scaffold-eth/packages/react-app/src/components/Address.jsx"],"names":["Skeleton","Typography","React","Blockies","useLookupAddress","Text","blockExplorerLink","address","blockExplorer","Address","props","value","ens","ensProvider","rows","displayAddress","substr","indexOf","size","etherscanLink","minimized","toLowerCase","text","onChange","verticalAlign","fontSize","paddingLeft"],"mappings":"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","sourcesContent":["import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useLookupAddress } from \"../hooks\";\n\n// changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) =>\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const address = props.value || props.address;\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  // const { currentTheme } = useThemeSwitcher();\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  if (ens && ens.indexOf(\"0x\") < 0) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <a className=\"align-middle  self-center\" target=\"_blank\" href={etherscanLink} rel=\"noopener noreferrer\">\n        <Blockies className=\"align-middle  self-center\"  seed={address.toLowerCase()} size={8} scale={2} />\n      </a>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <a\n        className=\" text-secondary  text-base text-center \"\n        target=\"_blank\"\n        href={etherscanLink}\n        rel=\"noopener noreferrer\"\n      >\n        {displayAddress}\n      </a>\n    );\n  } else {\n    text = (\n      // copyable={{ text: address }}\n\n      <a\n        className=\" text-secondary  text-base text-center \"\n        target=\"_blank\"\n        href={etherscanLink}\n        rel=\"noopener noreferrer\"\n      >\n        {displayAddress}\n      </a>\n    );\n  }\n\n  return (\n    <div>\n      <div style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 3} />\n      </div>\n      <div style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 16 }}>\n        {text}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}