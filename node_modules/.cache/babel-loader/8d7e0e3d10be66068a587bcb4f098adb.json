{"ast":null,"code":"var _jsxFileName = \"/Users/yuzucchi/Documents/operations/nft/scaffold-eth/packages/react-app/src/views/MyCrabs.jsx\";\nimport React from \"react\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport { Address, AddressInput } from \"../components\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nexport default (({\n  crabrades,\n  blockExplorer,\n  injectedProvider,\n  setTransferToAddresses,\n  tx,\n  writeContracts,\n  address,\n  transferToAddresses\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 640,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, crabrades && /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: crabrades,\n    renderItem: item => {\n      const id = item.id.toNumber();\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: id + \"_\" + item.uri + \"_\" + item.owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: 16,\n            marginRight: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 23\n          }\n        }, \"#\", id), \" \", item.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.image,\n        style: {\n          maxWidth: 150\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, item.description)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, \"owner:\", \" \", /*#__PURE__*/React.createElement(Address, {\n        address: item.owner,\n        ensProvider: injectedProvider,\n        blockExplorer: blockExplorer,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(AddressInput, {\n        ensProvider: injectedProvider,\n        placeholder: \"transfer to address\",\n        value: transferToAddresses[id],\n        onChange: newValue => {\n          const update = {};\n          update[id] = newValue;\n          setTransferToAddresses({ ...transferToAddresses,\n            ...update\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          console.log(\"writeContracts\", writeContracts);\n          tx(writeContracts.Crabrades.transferFrom(address, transferToAddresses[id], id));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, \"Transfer\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ClipLoader, {\n    size: 100,\n    color: \"red\",\n    loading: !!!crabrades,\n    speedMultiplier: 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/yuzucchi/Documents/operations/nft/scaffold-eth/packages/react-app/src/views/MyCrabs.jsx"],"names":["React","Alert","Button","Card","Col","Input","List","Menu","Row","Address","AddressInput","ClipLoader","crabrades","blockExplorer","injectedProvider","setTransferToAddresses","tx","writeContracts","address","transferToAddresses","width","margin","marginTop","paddingBottom","item","id","toNumber","uri","owner","fontSize","marginRight","name","image","maxWidth","description","newValue","update","console","log","Crabrades","transferFrom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0CC,IAA1C,EAAgDC,IAAhD,EAAsDC,GAAtD,QAAiE,MAAjE;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,eAAtC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,gBAAe,CAAC;AACdC,EAAAA,SADc;AAEdC,EAAAA,aAFc;AAGdC,EAAAA,gBAHc;AAIdC,EAAAA,sBAJc;AAKdC,EAAAA,EALc;AAMdC,EAAAA,cANc;AAOdC,EAAAA,OAPc;AAQdC,EAAAA;AARc,CAAD,KAST;AACJ,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE,MAAtB;AAA8BC,MAAAA,SAAS,EAAE,EAAzC;AAA6CC,MAAAA,aAAa,EAAE;AAA5D,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,iBACR,oBAAC,IAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,UAAU,EAAEA,SAFd;AAGE,IAAA,UAAU,EAAEY,IAAI,IAAI;AAClB,YAAMC,EAAE,GAAGD,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAX;AACA,0BACE,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,GAAG,EAAED,EAAE,GAAG,GAAL,GAAWD,IAAI,CAACG,GAAhB,GAAsB,GAAtB,GAA4BH,IAAI,CAACI,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,KAAK,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,EAAZ;AAAgBC,YAAAA,WAAW,EAAE;AAA7B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAiDL,EAAjD,CADF,OAC+DD,IAAI,CAACO,IADpE,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAEP,IAAI,CAACQ,KAAf;AAAsB,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAA7B;AAAgD,QAAA,GAAG,EAAC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMT,IAAI,CAACU,WAAX,CAVF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACS,GADT,eAEE,oBAAC,OAAD;AACE,QAAA,OAAO,EAAEV,IAAI,CAACI,KADhB;AAEE,QAAA,WAAW,EAAEd,gBAFf;AAGE,QAAA,aAAa,EAAED,aAHjB;AAIE,QAAA,QAAQ,EAAE,EAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAQE,oBAAC,YAAD;AACE,QAAA,WAAW,EAAEC,gBADf;AAEE,QAAA,WAAW,EAAC,qBAFd;AAGE,QAAA,KAAK,EAAEK,mBAAmB,CAACM,EAAD,CAH5B;AAIE,QAAA,QAAQ,EAAEU,QAAQ,IAAI;AACpB,gBAAMC,MAAM,GAAG,EAAf;AACAA,UAAAA,MAAM,CAACX,EAAD,CAAN,GAAaU,QAAb;AACApB,UAAAA,sBAAsB,CAAC,EAAE,GAAGI,mBAAL;AAA0B,eAAGiB;AAA7B,WAAD,CAAtB;AACD,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,eAkBE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BrB,cAA9B;AACAD,UAAAA,EAAE,CAACC,cAAc,CAACsB,SAAf,CAAyBC,YAAzB,CAAsCtB,OAAtC,EAA+CC,mBAAmB,CAACM,EAAD,CAAlE,EAAwEA,EAAxE,CAAD,CAAF;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,CAdF,CADF;AA4CD,KAjDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAsDE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,GAAlB;AAAuB,IAAA,KAAK,EAAE,KAA9B;AAAqC,IAAA,OAAO,EAAE,CAAC,CAAC,CAACb,SAAjD;AAA4D,IAAA,eAAe,EAAE,GAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtDF,CADF;AA0DD,CApED","sourcesContent":["import React from \"react\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport { Address, AddressInput } from \"../components\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nexport default ({\n  crabrades,\n  blockExplorer,\n  injectedProvider,\n  setTransferToAddresses,\n  tx,\n  writeContracts,\n  address,\n  transferToAddresses,\n}) => {\n  return (\n    <div style={{ width: 640, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n      {crabrades && (\n        <List\n          bordered\n          dataSource={crabrades}\n          renderItem={item => {\n            const id = item.id.toNumber();\n            return (\n              <List.Item key={id + \"_\" + item.uri + \"_\" + item.owner}>\n                <Card\n                  title={\n                    <div>\n                      <span style={{ fontSize: 16, marginRight: 8 }}>#{id}</span> {item.name}\n                    </div>\n                  }\n                >\n                  <div>\n                    <img src={item.image} style={{ maxWidth: 150 }} alt=\"\" />\n                  </div>\n                  <div>{item.description}</div>\n                </Card>\n\n                <div>\n                  owner:{\" \"}\n                  <Address\n                    address={item.owner}\n                    ensProvider={injectedProvider}\n                    blockExplorer={blockExplorer}\n                    fontSize={16}\n                  />\n                  <AddressInput\n                    ensProvider={injectedProvider}\n                    placeholder=\"transfer to address\"\n                    value={transferToAddresses[id]}\n                    onChange={newValue => {\n                      const update = {};\n                      update[id] = newValue;\n                      setTransferToAddresses({ ...transferToAddresses, ...update });\n                    }}\n                  />\n                  <Button\n                    onClick={() => {\n                      console.log(\"writeContracts\", writeContracts);\n                      tx(writeContracts.Crabrades.transferFrom(address, transferToAddresses[id], id));\n                    }}\n                  >\n                    Transfer\n                  </Button>\n                </div>\n              </List.Item>\n            );\n          }}\n        />\n      )}\n      <ClipLoader size={100} color={\"red\"} loading={!!!crabrades} speedMultiplier={1.5} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}