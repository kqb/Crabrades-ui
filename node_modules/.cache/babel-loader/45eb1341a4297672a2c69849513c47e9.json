{"ast":null,"code":"var _jsxFileName = \"/Users/yuzucchi/Documents/operations/nft/scaffold-eth/packages/react-app/src/views/MyCrabs.jsx\";\nimport React from \"react\";\nexport default (() => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 640,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: crabrades,\n    renderItem: item => {\n      const id = item.id.toNumber();\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: id + \"_\" + item.uri + \"_\" + item.owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: 16,\n            marginRight: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }\n        }, \"#\", id), \" \", item.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.image,\n        style: {\n          maxWidth: 150\n        },\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, item.description)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }, \"owner:\", \" \", /*#__PURE__*/React.createElement(Address, {\n        address: item.owner,\n        ensProvider: injectedProvider,\n        blockExplorer: blockExplorer,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(AddressInput, {\n        ensProvider: injectedProvider,\n        placeholder: \"transfer to address\",\n        value: transferToAddresses[id],\n        onChange: newValue => {\n          const update = {};\n          update[id] = newValue;\n          setTransferToAddresses({ ...transferToAddresses,\n            ...update\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          console.log(\"writeContracts\", writeContracts);\n          tx(writeContracts.Crabrades.transferFrom(address, transferToAddresses[id], id));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, \"Transfer\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/yuzucchi/Documents/operations/nft/scaffold-eth/packages/react-app/src/views/MyCrabs.jsx"],"names":["React","width","margin","marginTop","paddingBottom","crabrades","item","id","toNumber","uri","owner","fontSize","marginRight","name","image","maxWidth","description","injectedProvider","blockExplorer","transferToAddresses","newValue","update","setTransferToAddresses","console","log","writeContracts","tx","Crabrades","transferFrom","address"],"mappings":"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","sourcesContent":["import React from \"react\";\nexport default () => {\n  return (\n    <div style={{ width: 640, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n      <List\n        bordered\n        dataSource={crabrades}\n        renderItem={item => {\n          const id = item.id.toNumber();\n          return (\n            <List.Item key={id + \"_\" + item.uri + \"_\" + item.owner}>\n              <Card\n                title={\n                  <div>\n                    <span style={{ fontSize: 16, marginRight: 8 }}>#{id}</span> {item.name}\n                  </div>\n                }\n              >\n                <div>\n                  <img src={item.image} style={{ maxWidth: 150 }} alt=\"\" />\n                </div>\n                <div>{item.description}</div>\n              </Card>\n\n              <div>\n                owner:{\" \"}\n                <Address\n                  address={item.owner}\n                  ensProvider={injectedProvider}\n                  blockExplorer={blockExplorer}\n                  fontSize={16}\n                />\n                <AddressInput\n                  ensProvider={injectedProvider}\n                  placeholder=\"transfer to address\"\n                  value={transferToAddresses[id]}\n                  onChange={newValue => {\n                    const update = {};\n                    update[id] = newValue;\n                    setTransferToAddresses({ ...transferToAddresses, ...update });\n                  }}\n                />\n                <Button\n                  onClick={() => {\n                    console.log(\"writeContracts\", writeContracts);\n                    tx(writeContracts.Crabrades.transferFrom(address, transferToAddresses[id], id));\n                  }}\n                >\n                  Transfer\n                </Button>\n              </div>\n            </List.Item>\n          );\n        }}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}